/**
 * Starfinder - Health System
 * ===
 *
 * @module healthSystem
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////
import System from '../system';

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
/**
 * HealthSystem
 * @class
 * @extends System
 */
class HealthSystem extends System {

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  constructor(config) {
    super(config);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////
  /**
   *
   * @param {object} message
   * id: the entity id
   * value: the amount of damage to be applied
   */
  handleDamageEvent(message) {
    const COMPONENT = this._components.find((component) => {
      return component.id === message.body.id;
    });

    if (!COMPONENT) {
      throw new Error(`Health component not found for entity id ${message.body.id}`);
    }

    COMPONENT.update({damage: message.body.value});
    this._raiseComponentUpdatedEvent(COMPONENT);
  }

  handleHealingEvent(message) {

  }


  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default HealthSystem;
