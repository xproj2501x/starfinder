/**
 * XPROJ2501X.GITHUB.IO - Drawer
 * ===
 *
 * @module drawer
 */

////////////////////////////////////////////////////////////////////////////////
// Imports
////////////////////////////////////////////////////////////////////////////////
import React from 'react';
import PropTypes from 'prop-types';

////////////////////////////////////////////////////////////////////////////////
// Definitions
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
// Class
////////////////////////////////////////////////////////////////////////////////
/**
 * Drawer
 * @class
 * @extends React.Component
 */
class Drawer extends React.Component {

  //////////////////////////////////////////////////////////////////////////////
  // Static Properties
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Properties
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Public Properties
  //////////////////////////////////////////////////////////////////////////////

  /**
   * Drawer
   * @constructor
   */
  constructor(props) {
    super(props);
  }

  //////////////////////////////////////////////////////////////////////////////
  // Public Methods
  //////////////////////////////////////////////////////////////////////////////

  //////////////////////////////////////////////////////////////////////////////
  // Private Methods
  //////////////////////////////////////////////////////////////////////////////
  render() {
    return (
      <aside className={this._generateClassNames()}>{this.props.children}</aside>
    );
  }
  //////////////////////////////////////////////////////////////////////////////
  // Static Methods
  //////////////////////////////////////////////////////////////////////////////
  _generateClassNames() {
    let classes = `c-drawer c-drawer--${this.props.position} ${this.props.className}`;

    if (this.props.active) {
      classes += ' c-drawer--active';
    }
    return classes;
  }
}

Drawer.propTypes = {
  active: PropTypes.bool,
  children: PropTypes.node,
  className: PropTypes.string,
  onClick: PropTypes.func,
  position: PropTypes.oneOf([
    'left',
    'right'
  ])
};
////////////////////////////////////////////////////////////////////////////////
// Exports
////////////////////////////////////////////////////////////////////////////////
export default Drawer;
